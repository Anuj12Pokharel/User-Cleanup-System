# docker-compose.yml
version: "3.9"

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_backend_web
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --noinput &&
             daphne -b 0.0.0.0 -p 8000 user_backend.asgi:application"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    container_name: user_backend_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DJANGO_DB_NAME}
      POSTGRES_USER: ${DJANGO_DB_USER}
      POSTGRES_PASSWORD: ${DJANGO_DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: user_backend_redis
    restart: always
    ports:
      - "6379:6379"

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_backend_worker
    command: celery -A user_backend worker --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - db

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user_backend_beat
    command: celery -A user_backend beat --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - backend
      - redis
      - db

volumes:
  postgres_data:

